// Fill out your copyright notice in the Description page of Project Settings.


#include "NetPlayerAnimInstance.h"

#include "NetTPSCDCharacter.h"

void UNetPlayerAnimInstance::NativeInitializeAnimation()
{
	Super::NativeInitializeAnimation();
	// player를 기억하고싶다.
	player = Cast<ANetTPSCDCharacter>(GetOwningActor());
}

void UNetPlayerAnimInstance::NativeUpdateAnimation(float DeltaSeconds)
{
	Super::NativeUpdateAnimation(DeltaSeconds);

	if (nullptr == player)
		return;

	// speed, direction값을 채우고싶다.
	const FVector velocity = player->GetVelocity();

	speed = FVector::DotProduct(velocity, player->GetActorForwardVector());

	direction = FVector::DotProduct(velocity, player->GetActorRightVector());

	bHasPistol = player->bHasPistol;

	//player의 Pitch값을 가져와서 PitchAngle에 대입하고 시팓.
	 ptichAngle = (player->GetBaseAimRotation().GetNormalized().Pitch) * -1;

	//pitchAngle값을 -60~60안에 가둬야해
	 ptichAngle = FMath::Clamp(ptichAngle, -60, 60);
}

void UNetPlayerAnimInstance::PlayFireAnimation()
{
	//총을 잡고 있을때만 총쏘기 애니메이션을 하고 싶다.
	if(bHasPistol && fireMontage)
	{
	Montage_Play(fireMontage);
	}
}

void UNetPlayerAnimInstance::PlayReloadAnimation()
{
	if (bHasPistol && fireMontage)
	{
		Montage_Play(reloadMontage);
	}
}

void UNetPlayerAnimInstance::AnimNotify_OnReloadFinished()
{
	//캐릭터에게 실제로 총알을 채워라 라고 하고싶당.
	if (nullptr == player)
		return;

	player->InitAmmo();
}
